# Action script of tests conducted for all platforms. The complete suite
# of tests is described in .github/workflows/R-CMD-check-with-db.yaml

## MDSumner:
## configure.ac substantially modified, copied from rgdal/sf originally
## no trailing slash on PROJ_LIB=/usr/local/opt/proj/share/proj
## when using GDAL < 3 with PROJ >= 6 and auto set proj_api.h because WHY NOT
## C++11 implies GDAL 2.3.0 but we use 2.2.2 as a min
## with-data-copy seems to require also setting proj-data even if it's standard


on:
  push:
  pull_request:
    branches:
      - master

name: R-CMD-check-macos-brew

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}


    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

# fix like here: https://github.community/t/create-matrix-with-multiple-os-and-env-for-each-one/16895/2
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, macOS-latest]
        include:
        - os: macOS-latest
          r: 'release'
          args: '--install-args=\"--configure-args=--with-data-copy=yes --with-proj-data=/usr/local/share/proj\"'
          build_args: ""

        - os: macOS-latest
          r: 'devel'
          args: '--install-args=\"--configure-args=--with-data-copy=yes --with-proj-data=/usr/local/share/proj\"'
          build_args: ""
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: MacOS system dependencies
        if: runner.os == 'macOS'
        run: |
           brew install proj
           brew install geos
           brew install gdal

      - name: Query R package dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}


      - name: Install R package dependencies
        run: |
          library(remotes)
          deps <- readRDS("depends.Rds")
          deps[["installed"]] <- vapply(deps[["package"]], remotes:::local_sha, character(1))
          update(deps)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: R CMD check (not Windows)
        if: runner.os != 'Windows'
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "${{ matrix.config.args }}"), error_on = "warning", check_dir = "check", build_args = "${{ matrix.config.build_args }}")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
